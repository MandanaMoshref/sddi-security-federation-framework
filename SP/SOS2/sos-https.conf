<IfModule mod_ssl.c>
	<VirtualHost _default_:443>
		ServerName ssdsos2.gis.bgu.tum.de
		ServerSignature off

		DocumentRoot /var/www/html

                LogLevel debug ssl:warn rewrite:warn
		ErrorLog ${APACHE_LOG_DIR}/error.log
		CustomLog ${APACHE_LOG_DIR}/access.log combined

		SSLEngine on

		SSLCertificateFile	/etc/ssl/certs/ssdsos2.crt
		SSLCertificateKeyFile	/etc/ssl/private/ssdsos2.pem

		SSLCertificateChainFile	/etc/ssl/certs/chain-ssdsos2.crt


		<FilesMatch "\.(cgi|shtml|phtml|php)$">
				SSLOptions +StdEnvVars
		</FilesMatch>
		<Directory /usr/lib/cgi-bin>
				SSLOptions +StdEnvVars
		</Directory>

		BrowserMatch "MSIE [2-6]" \
			nokeepalive ssl-unclean-shutdown \
			downgrade-1.0 force-response-1.0

		ShibCompatValidUser On

		ProxyPass /smart-meters-sos-webapp ajp://127.0.0.1:8009/smart-meters-sos-webapp
		ProxyPassReverse //smart-meters-sos-webapp ajp://127.0.0.1:8009/smart-meters-sos-webapp
		
    <Location /secure>
        Header always set Cache-Control "private, no-cache, no-store, proxy-revalidate, no-transform
        Header always set Pragma "no-cache"

        AuthType shibboleth
        ShibRequestSetting requireSession 1
	ShibUseHeaders on
        require shib-session
    </Location>

    <Location /smart-meters-sos-webapp/service>
        Header always set Cache-Control "private, no-cache, no-store, proxy-revalidate, no-transform
        Header always set Pragma "no-cache"
        <If "%{HTTP:Authorization} =~ /Bearer/ || %{QUERY_STRING} =~ /access_token/">
            AuthType Bearer
            AuthName "SSD Security Demonstrator"
            Require valid-user
            PerlAuthenHandler SD::OAuthzBearerHandler
            PerlOptions +ParseHeaders +SetupEnv +GlobalRequest
            PerlSetVar ClientId 5a00af9a-ba8e-f5bd-cb5e-54d3aff6b8ff@asdev.sddi.secure-dimensions.de
            PerlSetVar ClientSecret 1587f03298f08df8f13e616c6652c2c1b141f0f34f634ce58db4bcdaa13fbcf9
            PerlSetVar ValidateURL https://as.sddi.secure-dimensions.de/oauth/tokeninfo
            PerlSetVar UserInfoURL https://as.sddi.secure-dimensions.de/oauth/userinfo

	    Header unset Authorization
	    RewriteEngine on
	    # a
	    #  ?a=foo
	    #  Starts with a=, non-ampersand to the end.
	    #  Suppress querystring with trailing question mark.
	    RewriteCond %{QUERY_STRING} ^access_token=([^&]+)$
	    RewriteRule .* /smart-meters-sos-webapp/service [END,PT,E=REWRITTEN:1]
	    
	    # a-other
	    #  ?a=foo&b=bar, ?a=foo&b=bar&c=1
	    #  Starts with a=, non-ampersand, ampersand, remaining required.
	    #  Escape question mark so it doesn't include entire original querystring.
	    RewriteCond %{QUERY_STRING} ^access_token=([^&]+)&(.+)
	    RewriteRule .* /smart-meters-sos-webapp/service?%2 [END,PT,E=REWRITTEN:1]
	    
	    # other-a or other-a-other
	    #  ?b=baz&a=qux, ?b=baz&c=1&a=qux
	    #  ?c=1&a=foo&d=2&b=bar&e=3, ?z=4&c=1&a=foo&d=2&b=bar&e=3
	    #  Starts with anything, ampersand, a=, non-ampersand, remaining optional.
	    #  The remaining optional lets it follow with nothing, or with ampersand and more parameters.
	    #  Escape question mark so it doesn't include entire original querystring.
	    RewriteCond %{QUERY_STRING} ^(.+)&access_token=([^&]+)(.*)$
	    RewriteRule .* /smart-meters-sos-webapp/service?%1%3 [END,PT,E=REWRITTEN:1]
        </If>
        <Elseif "%{ENV:REDIRECT_REWRITTEN} =~ /1/">
	    Require all granted
	</Elseif>
	<Else>
            AuthType shibboleth
            ShibRequestSetting requireSession 1
            Require shib-session
	    ShibUseHeaders on
	    PerlAuthzHandler SD::ShibAuthzHandler
            PerlOptions +ParseHeaders +SetupEnv +GlobalRequest
	    #Require all granted
	</Else>
    </Location>

    <Location /smart-meters-sos-webapp/static>
        AuthType shibboleth
        ShibRequestSetting requireSession 1
        Header always set Cache-Control "private, no-cache, no-store, proxy-revalidate, no-transform"
        Header always set Pragma "no-cache"
        require shib-session

        ShibUseHeaders on
        PerlAuthzHandler SD::ShibAuthzHandler
        PerlOptions +ParseHeaders +SetupEnv +GlobalRequest
    </Location>

#
# Ensures handler will be accessible.
#
<Location /Shibboleth.sso>
  AuthType None
  Require all granted
</Location>

#
# Used for example style sheet in error templates.
#
<IfModule mod_alias.c>
  <Location /shibboleth-sp>
    AuthType None
    Require all granted
  </Location>
  Alias /shibboleth-sp/main.css /usr/share/shibboleth/main.css
</IfModule>

	</VirtualHost>
</IfModule>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
